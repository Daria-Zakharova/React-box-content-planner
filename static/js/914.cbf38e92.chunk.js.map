{"version":3,"file":"static/js/914.cbf38e92.chunk.js","mappings":"wPAOaA,EAAWC,EAAAA,EAAAA,IAAH,+fAMJ,qBAAEC,aAAiC,OAAS,MAA5C,IAEO,gBAAEC,EAAF,EAAEA,MAAF,MAAa,cAAU,UAAVA,EAA2BC,EAC9C,WAAVD,EAA4BE,EAAyBC,EADxB,IAAb,IAmBXC,GAAQN,EAAAA,EAAAA,GAAOO,EAAAA,GAAPP,CAAH,oWAiBLQ,EAAYR,EAAAA,EAAAA,OAAH,ulBAIR,qBAAEC,aAAgC,OAAS,MAA3C,IAoBDQ,GAAcT,EAAAA,EAAAA,GAAOU,EAAAA,GAAPV,CAAH,+G,iDCnEXW,EAAc,SAAC,GAAe,IAAdC,EAAa,EAAbA,QASlBC,EAAkGD,EAAlGC,aAAcC,EAAoFF,EAApFE,YAAaC,EAAuEH,EAAvEG,aAAcC,EAAyDJ,EAAzDI,iBAAkBC,EAAuCL,EAAvCK,kBAAmBC,EAAoBN,EAApBM,SAAUC,EAAUP,EAAVO,OACzFC,GAAYC,EAAAA,EAAAA,IAAYJ,GAExBK,EAAuC,aAD5BC,EAAAA,EAAAA,MACeC,SAGhC,OACE,UAACzB,EAAD,CAAUG,MAASW,EAAcZ,aAAgBqB,EAAjD,WACE,wBAAKR,KACL,SAAC,KAAD,CACIW,cAAeN,EAAOO,QAAO,SAACC,EAAD,GAAmC,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,aAAgD,OAA7BF,EAAOC,GAAQC,EAAqBF,CAAO,GAAE,CAAC,GAC9GX,iBAAmBA,EACnBE,SAAUA,EAHd,UAKK,UAAC,KAAD,eAAQC,EAAOW,KAAI,gBAAEF,EAAF,EAAEA,KAAMG,EAAR,EAAQA,KAAR,OAAkB,8BAAyBC,EAAAA,EAAAA,GAAYJ,IAAM,SAACtB,EAAD,CAAOyB,KAAOA,EAAMH,KAAQA,IAAvE,KAA+E,SAACnB,EAAD,CAAamB,KAAQA,EAAMK,UAAa,SAAvH,OAAcC,EAAAA,EAAAA,UAAhC,KAEjB,UAAC1B,EAAD,CAAWuB,KAAK,SAASI,SAAUf,EAAWnB,aAAgBqB,EAA9D,UAA+EP,GAAa,SAACqB,EAAA,EAAD,CAAYC,QAASjB,EAAWlB,MAAM,QAAQoC,KAAM,EAAGC,gBAAiB,GAAKC,YAAa,CAC/LC,OAAQ,EACRC,SAAU,WACVC,MAAO,eAMZ,C,sHChCYC,EAAmBC,EAAAA,KAAaC,MAAM,CACjDlB,KAAMiB,EAAAA,KAAaE,IAAI,GAAGC,WAC1BC,OAAQJ,EAAAA,KAAaK,QAVD,iFAIL,wGAMuCA,QAT5B,kBAIL,sEAK8EF,aAGxFG,EAAeN,EAAAA,KAAaC,MAAM,CAC7ClB,KAAMiB,EAAAA,KAAaE,IAAI,GAAGC,WAC1BI,MAAOP,EAAAA,KAAaO,QAAQJ,WAC5BK,SAAUR,EAAAA,KAAaE,IAAI,GAAGO,IAAI,IAAIJ,QAdhB,iDAIG,oGAU0DF,aAGxEO,EAAcV,EAAAA,KAAaC,MAAM,CAC5CM,MAAOP,EAAAA,KAAaO,QAAQJ,WAC5BK,SAAUR,EAAAA,KAAaG,Y","sources":["components/FormSticker/FormSticker.styled.js","components/FormSticker/FormSticker.js","utils/validation.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport YellowNoteBg from \"img/yellow.png\";\nimport GreenNoteBg from \"img/green.png\";\nimport VioletNoteBg from \"img/pink.png\";\nimport { Field, ErrorMessage } from \"formik\";\n\n\nexport const FormWrap = styled.div`\n    position: absolute;\n    padding: 20px 40px;\n    width: 330px;\n    aspect-ratio: 1;\n    inset: 70px 40px;\n    font-size: ${({extraContent}) => extraContent ? '16px' : '20px'};\n    color: #000000aa;\n    background-image: ${({color}) => color === 'green' ? `url(${GreenNoteBg})`:\n        color === 'violet' ? `url(${VioletNoteBg})` : `url(${YellowNoteBg})`};\n    background-size: contain;\n    background-repeat: no-repeat;\n\n    h2 {\n        margin-bottom: 10px;\n        text-align: center;\n        font-size: 20px;\n        color: #000000cc;\n    }\n\n    label {\n        display: block;\n        font-weight: 700;\n        margin-bottom: 20px;\n    }\n`;\n\nexport const Input = styled(Field)`\n    width: 95%;\n    display: block;\n    background-color: transparent;\n    border: none;\n    border-bottom: 1px dotted #00000066;\n    font-family: 'Indie Flower', cursive;\n    font-size: inherit;\n\n    &:hover, &:focus {\n        border: 1px dotted #00000066;\n    }\n    &:invalid {\n        border: 1px dotted red;\n    }\n`;\n\nexport const SubmitBtn = styled.button`\n    position: absolute;\n    align-items: baseline;\n    left: 50%;\n    bottom: ${({extraContent}) => extraContent? \"40px\" : \"60px\"};\n    transform: translateX(-50%);\n    padding: 6px 30px;\n    margin: 0 auto;\n    align-self: center;\n    border: 2px solid #00000022;\n    border-radius: 5px;\n    font-size: 20px;\n    font-weight: 700;\n    background-color: transparent;\n    color: #000000aa;\n\n    &:hover {\n        background-color: #8bc34ab3;\n        border-color:#00000033;\n        box-shadow: rgb(0 0 0 / 20%) 0px 3px 1px -2px, rgb(0 0 0 / 14%) 0px 2px 2px 0px, rgb(0 0 0 / 12%) 0px 1px 5px 0px;\n\n    }\n`;\n\nexport const ErrorNotify = styled(ErrorMessage)`\n    position: absolute;\n    font-weight: 400;\n    font-size: 12px;\n    color: red;\n`;","import { capitalized } from \"utils/formatting/capitalize\";\nimport { ErrorNotify, FormWrap, Input, SubmitBtn } from \"./FormSticker.styled\";\nimport { Formik, Form} from \"formik\";\nimport { useSelector } from \"react-redux\";\nimport { BeatLoader } from \"react-spinners\";\nimport { nanoid } from \"@reduxjs/toolkit\";\nimport { useLocation } from \"react-router-dom\";\n\nexport const FormSticker = ({formObj}) => {\n     /* stickerColor: default, violet, green \n    fields: 2-3 \n    onSubmit: function\n    isLoadingSelector: selectorFunction\n    validationSchema\n    submitBtnText\n    inputs: [{name, type, initialValue}]\n     */\n    const {stickerColor, formHeading, submitBtnTxt, validationSchema, isLoadingSelector, onSubmit, inputs} = formObj;\n    const isLoading = useSelector(isLoadingSelector);\n    const location = useLocation();\n    const hasThreeFields = location.pathname === '/signup';\n\n \n    return (\n      <FormWrap color = {stickerColor} extraContent = {hasThreeFields}>\n        <h2>{formHeading}</h2>\n        <Formik\n            initialValues={inputs.reduce((values, {name, initialValue}) => {values[name] = initialValue; return values}, {})}\n            validationSchema ={validationSchema}\n            onSubmit={onSubmit}\n         >      \n             <Form> {inputs.map(({name, type}) => <label key = {nanoid()}>{capitalized(name)}<Input type ={type} name = {name}/> <ErrorNotify name = {name} component = {\"span\"}/> </label>)}\n\n               <SubmitBtn type=\"submit\" disabled={isLoading} extraContent = {hasThreeFields}>{submitBtnTxt}<BeatLoader loading={isLoading} color=\"#000a\" size={3} speedMultiplier={0.7} cssOverride={{\n      bottom: 4,\n      position: 'absolute',\n      right: 6\n    }}/></SubmitBtn>\n             </Form>      \n        </Formik>\n      </FormWrap>\n   )\n}\n","import * as yup from 'yup';\n\nconst NUMBER_REGEXP = /\\+?\\d{1,4}?[-\\d\\s]?\\(?\\d{1,3}?\\)?[-\\d\\s]?\\d{1,4}[-\\d\\s]?\\d{1,4}[-\\d\\s]?\\d{1,9}/;\nconst NUMBERS_ONLY_REGEXP = /^\\+?[\\d\\s-()]*$/;\nconst PASSWORD_REGEXP = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/;\n\nconst errorMsg = 'Phone number must be at least 5 digits, can contain spaces, dashes, parentheses and can start with +';\nconst numbersOnlyMsg = 'Phone number can contain digits, spaces, dashes, parentheses and +';\nconst invalidPasswordMsg = 'Password should be 8-16 characters, at least 1 uppercase letter, 1 lowercase letter and 1 number' \n\nexport const addContactSchema = yup.object().shape({\n  name: yup.string().min(3).required(),\n  number: yup.string().matches(NUMBER_REGEXP, errorMsg).matches(NUMBERS_ONLY_REGEXP, numbersOnlyMsg).required(),\n});\n\nexport const signUpSchema = yup.object().shape({\n  name: yup.string().min(3).required(),\n  email: yup.string().email().required(),\n  password: yup.string().min(8).max(16).matches(PASSWORD_REGEXP, invalidPasswordMsg).required(),\n});\n\nexport const loginSchema = yup.object().shape({\n  email: yup.string().email().required(),\n  password: yup.string().required(),\n})"],"names":["FormWrap","styled","extraContent","color","GreenNoteBg","VioletNoteBg","YellowNoteBg","Input","Field","SubmitBtn","ErrorNotify","ErrorMessage","FormSticker","formObj","stickerColor","formHeading","submitBtnTxt","validationSchema","isLoadingSelector","onSubmit","inputs","isLoading","useSelector","hasThreeFields","useLocation","pathname","initialValues","reduce","values","name","initialValue","map","type","capitalized","component","nanoid","disabled","BeatLoader","loading","size","speedMultiplier","cssOverride","bottom","position","right","addContactSchema","yup","shape","min","required","number","matches","signUpSchema","email","password","max","loginSchema"],"sourceRoot":""}